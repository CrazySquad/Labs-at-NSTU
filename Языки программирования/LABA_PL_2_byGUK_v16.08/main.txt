/*
Требования к реализации:
Требуется создать базовый класс (как вариант абстрактный базовый класс) и определить общие методы  show  (  ),
get  (  ),  set  (  )  и другие,  специфические для данного класса.Создать производные классы,  в которые
добавить свойства и методы.Часть методов переопределить.Создать массив объектов базового класса и заполнить
объектами производных классов.Объекты производных классов идентифицировать конструктором по имени или
идентификационному номеру (в зависимости от варианта).  Вызвать метод  show  (  )  базового класса и просмотреть
массив объектов. Использовать объекты для моделирования реальных ситуаций.
Вариант:
1.  Создать базовый класс «Транспортноесредство» и производные классы  «Автомобиль»,  «Велосипед»,
«Повозка».  Подсчитать время и стоимость перевозки пассажиров и грузов каждым транспортным средством.
*/

#include "stdafx.h"
#include "Vehicle.h"
#include "Automobile.h"
#include "Wain.h"
#include "Bicycle.h"
#include "locale.h"
#define NUM 7    // различные тс

int main()
{
	setlocale(LC_ALL, "rus");
	Animal animal;// таблица возможных животных( см Wain)
	//-------------------------------------------------------------------------------
	Automobile* car1 = new Automobile("Tesla_M");
	car1->SetSpeed(125);
	car1->SetFactorOfSafety(1000);
	Automobile* car2 = new Automobile("УАЗик");
	car2->LockTrailer();
	Wain* cart1 = new Wain(animal.Camel);
	Wain* cart2 = new Wain(animal.Donkey);
	Wain* cart3 = new Wain(animal.Horse);
	Bicycle* bike1 = new Bicycle("Спиди");
	bike1->SetFactorOfSafety(70);
	bike1->SetSpeed(40);
	Bicycle* bike2 = new Bicycle("Сережа");
	bike2->SetFriends(6);
	//-------------------------------------------------------------------------------
	Vehicle* arr[NUM];// массив указателей на объект базового класса
	arr[0] = bike1; arr[1] = car1; arr[2] = cart2; arr[3] = bike2; arr[4] = cart3; arr[5] = car2; arr[6] = cart1;
	//-------------------------------------------------------------------------------
	for (int i = 0; i < NUM; i++)
	{
		arr[i]->PrintAllAboutTransit(1200, 5000);
		delete arr[i];
	}
	system("pause");
	return 0;
}

